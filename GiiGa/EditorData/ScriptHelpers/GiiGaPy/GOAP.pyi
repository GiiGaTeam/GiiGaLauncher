from __future__ import annotations
import typing
__all__ = ['Action', 'Planner', 'WorldState']
class Action:
    @staticmethod
    def _pybind11_conduit_v1_(*args, **kwargs):
        ...
    def __init__(self, arg0: dict[str, bool], arg1: dict[str, bool], arg2: int) -> None:
        ...
class Planner:
    @staticmethod
    def _pybind11_conduit_v1_(*args, **kwargs):
        ...
    def __init__(self) -> None:
        ...
    def plan(self, arg0: WorldState, arg1: WorldState, arg2: list[Action]) -> list[Action]:
        ...
class WorldState:
    @staticmethod
    def _pybind11_conduit_v1_(*args, **kwargs):
        ...
    @typing.overload
    def __init__(self) -> None:
        ...
    @typing.overload
    def __init__(self, arg0: dict[str, bool]) -> None:
        ...
    def hasKey(self, arg0: str) -> bool:
        ...
    def print(self) -> None:
        ...
    def setValue(self, arg0: str, arg1: bool) -> None:
        ...
